
==================== FINAL INTERFACE ====================
2017-10-16 09:59:54.0452745 UTC

interface main@main:Main 8002
  interface hash: 29bd120b118350a2bb903fff45843911
  ABI hash: a788c7574cdf13219646f7a6412f125d
  export-list hash: d02c6fa10e15447bc3287ff77d996cbd
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5d31e0ba27defa152a0962ea9f666e0b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.get
  Main.main
  Main.time
  Main.Time{Main.Time serverTime}
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-6wCyTjvbtwlIkd3BfnttSb
                      asn1-parse-0.9.4@asn1-parse-0.9.4-4COREvxIGXFJsnYVvGLF0z
                      asn1-types-0.3.2@asn1-types-0.3.2-6l1jIn7OWRhAStFBNopdjt
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-m1TEyTenyr5nJN40TpHVj
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      connection-0.2.8@connection-0.2.8-JfJmcNcI7WpFMeCc1pSsUT
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      cryptonite-0.23@cryptonite-0.23-1BPzMTfYoVC8tdtJoIP3OP
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-ILGOyD7m7Ux4hWsSIqCzOU
                      http-client-0.5.7.0@http-client-0.5.7.0-CQymSUP4Z1BAo8xjxiYJpm
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-4pkxtVb25UdJKZOvplgMTK
                      http-conduit-2.2.3.2@http-conduit-2.2.3.2-BBpVIm8PT7QJq0fyit91PK
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.8@memory-0.14.8-BgsfhmIv5fBKaS9l38eDNf
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      socks-0.5.5@socks-0.5.5-6FcmSK8LSgmL2RsHY9zAaB
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-8Q1MsGyzrPPGgHz2C1BSr4
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-BA3330NVp8S80OJXdS92Md
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      x509-1.7.2@x509-1.7.2-7U3D3fSMupREG1E4s31cH7
                      x509-store-1.6.5@x509-store-1.6.5-KbrmHXrXxUFKO2ZFaEIwRt
                      x509-system-1.6.6@x509-system-1.6.6-5lMArHJMaxnHqxIvR36CWf
                      x509-validation-1.6.9@x509-validation-1.6.9-LowoeENPF12KqhLwbwwoa1
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Block
         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.UArray
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-CQymSUP4Z1BAo8xjxiYJpm:Network.HTTP.Client.Request
         network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Block.Base
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.BoxedArray
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Monad
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.MutableBuilder
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.NonEmpty
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Numerical.Subtractive
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.ASCII7
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.UTF16
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.String.Encoding.UTF32
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Types.AsciiString
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.Types.OffsetSize
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.UArray.Base
                         basement-0.0.3@basement-0.0.3-9VABBoFJLfV9rowquvHEzl:Basement.UTF8.Base
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6:Foundation.Array.Bitmap
                         foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6:Foundation.Collection.Buildable
                         foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6:Foundation.Collection.Element
                         foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6:Foundation.Collection.Keyed
                         foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6:Foundation.Collection.Mutable
                         foundation-0.0.16@foundation-0.0.16-DD00tmQlEgn4HioqEFL1z6:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-CQymSUP4Z1BAo8xjxiYJpm:Network.HTTP.Client
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson 2c2ea416ea3f3f7ead4fbc7d22c60646
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson.Types.FromJSON c2c6218f8e81ad49905d0b1cdb32252e
import  -/  aeson-1.1.2.0@aeson-1.1.2.0-IYYaF432Hu8HQKp7no3ap1:Data.Aeson.Types.Internal c2b7e48c55f4f3192a35e330eb07e54f
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Number d406a654a4a2216aee85f5f150ca04fd
import  -/  base-4.9.1.0:Control.Applicative 2c56a0c43327cbbcb6e7a55bf05443c9
import  -/  base-4.9.1.0:Control.Monad.IO.Class 3f1875e753ac8c44dae64dc062ea742e
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy a933f8de698ac656298f2d79daa92bb5
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy.Internal 61e0e0074cd46129068bdc82d100a6ee
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  http-conduit-2.2.3.2@http-conduit-2.2.3.2-BBpVIm8PT7QJq0fyit91PK:Network.HTTP.Conduit ae9c9b5590fb970182f52e528a098517
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.Trans d69bc2e104a90fb918d853b240f7af2e
5457f4fc071ee712ebb092647dd22a6a
  $fFromJSONTime :: Data.Aeson.Types.FromJSON.FromJSON Main.Time
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Time
                  Main.$fFromJSONTime_$cparseJSON
                  Main.$fFromJSONTime_$cparseJSONList -}
5457f4fc071ee712ebb092647dd22a6a
  $fFromJSONTime1 ::
    [Data.Aeson.Types.Internal.Parser Main.Time]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Main.Time] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
5457f4fc071ee712ebb092647dd22a6a
  $fFromJSONTime10 :: Data.Aeson.Types.Internal.Parser Main.Time
  {- Strictness: x -}
fca8154884039e27b9bd6492e169e9d3
  $fFromJSONTime2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
038277723c1208ff4c0809ab94f83eac
  $fFromJSONTime3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "serverTime"#) -}
c6c20a43312207fd6e26e9d366c92c42
  $fFromJSONTime4 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f r
    -> Data.Aeson.Types.Internal.Success
         Data.Attoparsec.Number.Number f r
    -> f r
  {- Arity: 3,
     Unfolding: (\ @ (f :: * -> *)
                   @ r
                   (_path :: Data.Aeson.Types.Internal.JSONPath)
                   (_kf :: Data.Aeson.Types.Internal.Failure f r)
                   (ks :: Data.Aeson.Types.Internal.Success
                            Data.Attoparsec.Number.Number f r) ->
                 ks Main.$fFromJSONTime_a1) -}
f821eb486c814492ac048467f6779392
  $fFromJSONTime5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (10) -}
a25541aa66f68d276c9526dfcde2eea4
  $fFromJSONTime6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Number"#) -}
3972d836add35f22cc1ecbaa4524b612
  $fFromJSONTime7 ::
    Data.Aeson.Types.Internal.JSONPath
    -> Data.Aeson.Types.Internal.Failure f r
    -> Data.Aeson.Types.Internal.Success
         Data.Attoparsec.Number.Number f r
    -> f r
  {- Arity: 3,
     Unfolding: (\ @ (f :: * -> *)
                   @ r
                   (path :: Data.Aeson.Types.Internal.JSONPath)
                   (kf :: Data.Aeson.Types.Internal.Failure f r)
                   (_ks :: Data.Aeson.Types.Internal.Success
                             Data.Attoparsec.Number.Number f r) ->
                 kf
                   (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                   Main.$fFromJSONTime_msg3) -}
b6cba258c95c594ab38af3ea6300bd60
  $fFromJSONTime8 :: [GHC.Types.Char]
  {- Unfolding: (case Data.Text.Show.$w$cshow
                        Main.$fFromJSONTime3 of ww { (#,#) ww1 ww2 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.: @ GHC.Types.Char ww1 ww2)
                   Main.$fFromJSONTime9 }) -}
a4bb8d3c865bb8e241f050dcb14d2b05
  $fFromJSONTime9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " not present"#) -}
5457f4fc071ee712ebb092647dd22a6a
  $fFromJSONTime_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.Time
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT -> Main.$fFromJSONTime10
                   Data.Aeson.Types.Internal.Object t
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser Data.Attoparsec.Number.Number
                        = case Main.$fFromJSONTime3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          case Data.Aeson.Types.FromJSON.$w$slookup
                                 @ Data.Aeson.Types.Internal.Value
                                 ww1
                                 ww2
                                 ww3
                                 t of wild1 {
                            GHC.Base.Nothing
                            -> Main.$fFromJSONTime7
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <Data.Attoparsec.Number.Number>_R))
                            GHC.Base.Just v
                            -> let {
                                 p :: Data.Aeson.Types.Internal.Parser Data.Attoparsec.Number.Number
                                 = case v of wild2 {
                                     DEFAULT
                                     -> Data.Aeson.Types.FromJSON.typeMismatch
                                          @ Data.Attoparsec.Number.Number
                                          Main.$fFromJSONTime6
                                          wild2
                                     Data.Aeson.Types.Internal.Number s
                                     -> case s of wild3 { Data.Scientific.Scientific ds1 dt ->
                                        let {
                                          a1 :: Data.Attoparsec.Number.Number
                                          = case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.<# dt 0#) of wild4 {
                                              GHC.Types.False
                                              -> case case dt of wild5 {
                                                        DEFAULT
                                                        -> GHC.Integer.Type.timesInteger
                                                             ds1
                                                             (GHC.Real.$wf
                                                                Main.$fFromJSONTime5
                                                                wild5)
                                                        0#
                                                        -> GHC.Integer.Type.timesInteger
                                                             ds1
                                                             GHC.Real.$fEnumRatio1 } of dt1 { DEFAULT ->
                                                 Data.Attoparsec.Number.I dt1 }
                                              GHC.Types.True
                                              -> case Data.Scientific.$w$stoBoundedRealFloat1
                                                        ds1
                                                        dt of wild5 {
                                                   Data.Either.Left x1
                                                   -> case x1 of dt1 { GHC.Types.D# dt2 ->
                                                      Data.Attoparsec.Number.D dt2 }
                                                   Data.Either.Right y
                                                   -> case y of dt1 { GHC.Types.D# dt2 ->
                                                      Data.Attoparsec.Number.D dt2 } } }
                                        } in
                                        (\ @ (f :: * -> *)
                                           @ r
                                           (_path :: Data.Aeson.Types.Internal.JSONPath)
                                           (_kf :: Data.Aeson.Types.Internal.Failure f r)
                                           (ks :: Data.Aeson.Types.Internal.Success
                                                    Data.Attoparsec.Number.Number f r) ->
                                         ks a1)
                                          `cast`
                                        (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                  <Data.Attoparsec.Number.Number>_R)) }
                                     Data.Aeson.Types.Internal.Null
                                     -> Main.$fFromJSONTime4
                                          `cast`
                                        (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                  <Data.Attoparsec.Number.Number>_R)) }
                               } in
                               (\ @ (f :: * -> *)
                                  @ r
                                  (path :: Data.Aeson.Types.Internal.JSONPath)
                                  (kf :: Data.Aeson.Types.Internal.Failure f r)
                                  (ks :: Data.Aeson.Types.Internal.Success
                                           Data.Attoparsec.Number.Number f r) ->
                                p `cast`
                                (Data.Aeson.Types.Internal.N:Parser[0]
                                     <Data.Attoparsec.Number.Number>_R)
                                  @ f
                                  @ r
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.JSONPathElement
                                     Main.$fFromJSONTime_pathElem
                                     path)
                                  kf
                                  ks)
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                         <Data.Attoparsec.Number.Number>_R)) } }
                      } in
                      (\ @ (f4 :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (ks :: Data.Aeson.Types.Internal.Success Main.Time f4 r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <Data.Attoparsec.Number.Number>_R)
                         @ f4
                         @ r
                         path
                         kf
                         (\ (a1 :: Data.Attoparsec.Number.Number) -> ks (Main.Time a1)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Main.Time>_R)) }) -}
5457f4fc071ee712ebb092647dd22a6a
  $fFromJSONTime_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.Time]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Main.Time]
                        Main.$fFromJSONTime2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Main.$fFromJSONTime1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds1 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Main.$fFromJSONTime_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Main.Time]>_R)) } }) -}
6bb0fa7ad242b578ac60a0da0a11d0db
  $fFromJSONTime_a1 :: Data.Attoparsec.Number.Number
  {- Unfolding: (case GHC.Prim./## 0.0## 0.0## of wild2 { DEFAULT ->
                 Data.Attoparsec.Number.D wild2 }) -}
5457f4fc071ee712ebb092647dd22a6a
  $fFromJSONTime_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Main.Time]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
b31f5d02be050bf4f4361c8d8639b85d
  $fFromJSONTime_msg3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "key "#
                   Main.$fFromJSONTime8) -}
d099839c41370d13d84bef09088dd6a9
  $fFromJSONTime_pathElem ::
    Data.Aeson.Types.Internal.JSONPathElement
  {- Unfolding: (Data.Aeson.Types.Internal.Key
                   Main.$fFromJSONTime3) -}
5457f4fc071ee712ebb092647dd22a6a
  $fShowTime :: GHC.Show.Show Main.Time
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Time
                  Main.$fShowTime_$cshowsPrec
                  Main.$fShowTime_$cshow
                  Main.$fShowTime_$cshowList -}
5457f4fc071ee712ebb092647dd22a6a
  $fShowTime1 :: Main.Time -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Main.Time) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Time ww1 -> Main.$w$cshowsPrec 0# ww1 w1 }) -}
487b1245ba548b55dae976be91f3defb
  $fShowTime2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Time {"#) -}
956c08289f3c6ff5f052bacb376781df
  $fShowTime3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
bbf55f78c9dffaf5e6eaf7239697b95f
  $fShowTime4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "serverTime = "#) -}
5457f4fc071ee712ebb092647dd22a6a
  $fShowTime_$cshow :: Main.Time -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Time) ->
                 Main.$fShowTime_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5457f4fc071ee712ebb092647dd22a6a
  $fShowTime_$cshowList :: [Main.Time] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Time Main.$fShowTime1) -}
5457f4fc071ee712ebb092647dd22a6a
  $fShowTime_$cshowsPrec ::
    GHC.Types.Int -> Main.Time -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Time)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Time ww3 ->
                 Main.$w$cshowsPrec ww1 ww3 w2 } }) -}
1362531f25a64f623a850d299d9834ac
  $tc'Time :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13418956705210790486##
                   118224008073762317##
                   Main.$trModule
                   Main.$tc'Time1) -}
b9b8395f3bed8bb026916c8e34547d69
  $tc'Time1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Time"#) -}
4ae796d493a0a3ecef5609e86b646b1a
  $tcTime :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9777986427486013743##
                   6303209135241558935##
                   Main.$trModule
                   Main.$tcTime1) -}
b9f50d22f11b3e29e91af2884a404a61
  $tcTime1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Time"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
7ca1a331ce3ddb481f3c2e4236fbd556
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Data.Attoparsec.Number.Number
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Attoparsec.Number.Number)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Main.$fShowTime4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          (Data.Attoparsec.Number.$fShowNumber_$cshow ww1)
                          (GHC.Base.++ @ GHC.Types.Char Main.$fShowTime3 x))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowTime2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Main.$fShowTime2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
0decd9649d250f9cc8212273bc8a0415
  $w$j :: Data.Aeson.Types.Internal.Value -> GHC.Base.Maybe Main.Time
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Aeson.Types.Internal.Value)[OneShot] ->
                 case (Main.$fFromJSONTime_$cparseJSON w)
                        `cast`
                      (Data.Aeson.Types.Internal.N:Parser[0] <Main.Time>_R)
                        @ Data.Aeson.Types.Internal.Result
                        @ Main.Time
                        (GHC.Types.[] @ Data.Aeson.Types.Internal.JSONPathElement)
                        Main.main3
                        (Data.Aeson.Types.Internal.Success @ Main.Time) of wild1 {
                   Data.Aeson.Types.Internal.Error ipv -> GHC.Base.Nothing @ Main.Time
                   Data.Aeson.Types.Internal.Success a1
                   -> GHC.Base.Just @ Main.Time a1 }) -}
7717c83ab25a438e9bb9b5d15d296dbf
  $w$j1 ::
    Data.Aeson.Types.Internal.Value -> GHC.Base.Maybe Main.Time
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Aeson.Types.Internal.Value)[OneShot] ->
                 case (Main.$fFromJSONTime_$cparseJSON w)
                        `cast`
                      (Data.Aeson.Types.Internal.N:Parser[0] <Main.Time>_R)
                        @ Data.Aeson.Types.Internal.Result
                        @ Main.Time
                        (GHC.Types.[] @ Data.Aeson.Types.Internal.JSONPathElement)
                        Main.main3
                        (Data.Aeson.Types.Internal.Success @ Main.Time) of wild1 {
                   Data.Aeson.Types.Internal.Error ipv -> GHC.Base.Nothing @ Main.Time
                   Data.Aeson.Types.Internal.Success a1
                   -> GHC.Base.Just @ Main.Time a1 }) -}
5457f4fc071ee712ebb092647dd22a6a
  data Time = Time {serverTime :: Data.Attoparsec.Number.Number}
3ed8741797604d00af6610273e1ddf99
  get ::
    Control.Monad.IO.Class.MonadIO m =>
    GHC.Base.String -> m Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <S(LC(S)),1*U(A,1*C1(U))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (m :: * -> *)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   (time1 :: GHC.Base.String) ->
                 Network.HTTP.Conduit.simpleHttp
                   @ m
                   $dMonadIO
                   (Main.get1
                      @ [GHC.Types.Char]
                      (GHC.Types.: @ GHC.Types.Char)
                      time1)) -}
8d979d97f742bd5b503623be78ca6bab
  get1 :: (GHC.Types.Char -> b -> b) -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U>,
     Unfolding: (\ @ b
                   (c :: GHC.Types.Char -> b -> b)[OneShot]
                   (n :: b)[OneShot] ->
                 GHC.CString.unpackFoldrCString#
                   @ b
                   "https://www.binance.com/api/v1/"#
                   c
                   n) -}
9173770874556991c5df328e9a7bb0c0
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
8776716b87372975b7377ef9e92fe7e0
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Main.main2 s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case ipv1 of wild {
                      GHC.Base.Nothing -> GHC.Show.$fShowMaybe3
                      GHC.Base.Just b1
                      -> GHC.Base.++
                           @ GHC.Types.Char
                           GHC.Show.$fShowMaybe1
                           (case b1 of ww { Main.Time ww1 ->
                            Main.$w$cshowsPrec 11# ww1 (GHC.Types.[] @ GHC.Types.Char) }) })
                   GHC.Types.True
                   ipv }) -}
faa6998e889dc80ba7342b931a2a4500
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Main.Time #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Network.HTTP.Conduit.simpleHttp
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Main.main6)
                        `cast`
                      (GHC.Types.N:IO[0] <Data.ByteString.Lazy.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of wild {
                      Data.ByteString.Lazy.Internal.Empty
                      -> case Main.main4 of wild1 {
                           Data.Attoparsec.ByteString.Lazy.Fail ipv2 ipv3 ipv4
                           -> GHC.Base.Nothing @ Main.Time
                           Data.Attoparsec.ByteString.Lazy.Done ds v -> Main.$w$j v }
                      Data.ByteString.Lazy.Internal.Chunk dt dt1 dt2 dt3 xs
                      -> case Data.Attoparsec.ByteString.Lazy.parse_go
                                @ Data.Aeson.Types.Internal.Value
                                (Data.Aeson.Parser.Internal.$wjsonEOF
                                   @ Data.Aeson.Types.Internal.Value
                                   dt
                                   dt1
                                   dt2
                                   dt3
                                   dt3
                                   0#
                                   0#
                                   Data.Attoparsec.Internal.Types.Incomplete
                                   (Data.Attoparsec.ByteString.Internal.failK
                                      @ Data.Aeson.Types.Internal.Value)
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> [GHC.Base.String]
                                          -> GHC.Base.String
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               Data.Aeson.Types.Internal.Value>_R)
                                   (Data.Attoparsec.ByteString.Internal.successK
                                      @ Data.Aeson.Types.Internal.Value)
                                     `cast`
                                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                    ->_R <Data.Attoparsec.Internal.Types.Pos
                                          -> Data.Attoparsec.Internal.Types.More
                                          -> Data.Aeson.Types.Internal.Value
                                          -> Data.Attoparsec.Internal.Types.IResult
                                               Data.ByteString.Internal.ByteString
                                               Data.Aeson.Types.Internal.Value>_R))
                                xs of wild1 {
                           Data.Attoparsec.ByteString.Lazy.Fail ipv2 ipv3 ipv4
                           -> GHC.Base.Nothing @ Main.Time
                           Data.Attoparsec.ByteString.Lazy.Done ds v
                           -> Main.$w$j v } } #) }) -}
ee109e431bcee00f229d9b13a93cd6f7
  main3 ::
    Data.Aeson.Types.Internal.JSONPath
    -> GHC.Base.String -> Data.Aeson.Types.Internal.Result Main.Time
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                   (eta :: GHC.Base.String) ->
                 Data.Aeson.Types.Internal.Error @ Main.Time eta) -}
43a6f9b9325e1afbbc278fecd8d4050d
  main4 ::
    Data.Attoparsec.ByteString.Lazy.Result
      Data.Aeson.Types.Internal.Value
  {- Unfolding: (Data.Attoparsec.ByteString.Lazy.parse_$sgo
                   @ Data.Aeson.Types.Internal.Value
                   Main.main5) -}
4c8b230d3eb90bb1c515d45b4a3783cc
  main5 ::
    Data.Attoparsec.Internal.Types.IResult
      Data.ByteString.Internal.ByteString Data.Aeson.Types.Internal.Value
  {- Unfolding: (Data.Aeson.Parser.Internal.$wjsonEOF
                   @ Data.Aeson.Types.Internal.Value
                   __NULL
                   Data.ByteString.Internal.$fMonoidByteString3
                   0#
                   0#
                   0#
                   0#
                   0#
                   Data.Attoparsec.Internal.Types.Incomplete
                   (Data.Attoparsec.ByteString.Internal.failK
                      @ Data.Aeson.Types.Internal.Value)
                     `cast`
                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                    ->_R <Data.Attoparsec.Internal.Types.Pos
                          -> Data.Attoparsec.Internal.Types.More
                          -> [GHC.Base.String]
                          -> GHC.Base.String
                          -> Data.Attoparsec.Internal.Types.IResult
                               Data.ByteString.Internal.ByteString
                               Data.Aeson.Types.Internal.Value>_R)
                   (Data.Attoparsec.ByteString.Internal.successK
                      @ Data.Aeson.Types.Internal.Value)
                     `cast`
                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                    ->_R <Data.Attoparsec.Internal.Types.Pos
                          -> Data.Attoparsec.Internal.Types.More
                          -> Data.Aeson.Types.Internal.Value
                          -> Data.Attoparsec.Internal.Types.IResult
                               Data.ByteString.Internal.ByteString
                               Data.Aeson.Types.Internal.Value>_R)) -}
07a160d6a33b12608f4e49b6cceb1ea8
  main6 :: [GHC.Types.Char]
  {- Unfolding: (Main.get1
                   @ [GHC.Types.Char]
                   (GHC.Types.: @ GHC.Types.Char)
                   Main.main7) -}
1254c31ac47db9479bcef0c171c706c4
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "time"#) -}
4bb3ba4bbbd1314e505c5c371cab39f1
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
033f11b6d8b15786dcac90817e32a99b
  serverTime :: Main.Time -> Data.Attoparsec.Number.Number
  RecSel Left Main.Time
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Time) ->
                 case ds of wild { Main.Time ds1 -> ds1 }) -}
b3a60eb10fad8f76b845f7d6eef02054
  time ::
    Control.Monad.IO.Class.MonadIO m => m (GHC.Base.Maybe Main.Time)
  {- Arity: 1, Strictness: <S(SL),U(1*U,1*C1(U))>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m) ->
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ Data.ByteString.Lazy.Internal.ByteString
                   @ (GHC.Base.Maybe Main.Time)
                   (Network.HTTP.Conduit.simpleHttp @ m $dMonadIO Main.main6)
                   (let {
                      f :: GHC.Base.Maybe Main.Time -> m (GHC.Base.Maybe Main.Time)
                      = GHC.Base.return @ m $dMonad @ (GHC.Base.Maybe Main.Time)
                    } in
                    \ (x :: Data.ByteString.Lazy.Internal.ByteString) ->
                    f (case x of wild {
                         Data.ByteString.Lazy.Internal.Empty
                         -> case Main.main4 of wild1 {
                              Data.Attoparsec.ByteString.Lazy.Fail ipv ipv1 ipv2
                              -> GHC.Base.Nothing @ Main.Time
                              Data.Attoparsec.ByteString.Lazy.Done ds v -> Main.$w$j1 v }
                         Data.ByteString.Lazy.Internal.Chunk dt dt1 dt2 dt3 xs
                         -> case Data.Attoparsec.ByteString.Lazy.parse_go
                                   @ Data.Aeson.Types.Internal.Value
                                   (Data.Aeson.Parser.Internal.$wjsonEOF
                                      @ Data.Aeson.Types.Internal.Value
                                      dt
                                      dt1
                                      dt2
                                      dt3
                                      dt3
                                      0#
                                      0#
                                      Data.Attoparsec.Internal.Types.Incomplete
                                      (Data.Attoparsec.ByteString.Internal.failK
                                         @ Data.Aeson.Types.Internal.Value)
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> [GHC.Base.String]
                                             -> GHC.Base.String
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  Data.Aeson.Types.Internal.Value>_R)
                                      (Data.Attoparsec.ByteString.Internal.successK
                                         @ Data.Aeson.Types.Internal.Value)
                                        `cast`
                                      (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                       ->_R <Data.Attoparsec.Internal.Types.Pos
                                             -> Data.Attoparsec.Internal.Types.More
                                             -> Data.Aeson.Types.Internal.Value
                                             -> Data.Attoparsec.Internal.Types.IResult
                                                  Data.ByteString.Internal.ByteString
                                                  Data.Aeson.Types.Internal.Value>_R))
                                   xs of wild1 {
                              Data.Attoparsec.ByteString.Lazy.Fail ipv ipv1 ipv2
                              -> GHC.Base.Nothing @ Main.Time
                              Data.Attoparsec.ByteString.Lazy.Done ds v -> Main.$w$j1 v } }))) -}
instance Data.Aeson.Types.FromJSON.FromJSON [Main.Time]
  = Main.$fFromJSONTime
instance GHC.Show.Show [Main.Time] = Main.$fShowTime
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

